{"version":3,"sources":["Components/TextArea.jsx","Constants/status.js","Components/StatusDot.jsx","Components/Row.jsx","Components/Table.jsx","Components/Controls.jsx","utils/isValidJson.js","Constants/csvFileHeader.js","App.js","serviceWorker.js","index.js"],"names":["TextArea","this","props","shouldFocusOnCreate","textArea","focus","_this","react_default","a","createElement","ref","input","className","onChange","name","id","value","Component","NotTested","Failed","Passed","StatusDot","getClass","status","concat","animatedClassName","toolTipText","Row","onClick","onDelete","Components_TextArea","e","case","expectedResult","actualResult","type","checked","iPhoneTested","zebraTested","iPadTested","desktopTested","Components_StatusDot","Table","rows","length","map","x","i","Components_Row","key","Controls","onFileImportChange","reader","FileReader","readAsText","target","files","onload","content","result","onImportData","style","float","onResetData","document","getElementById","click","onExportJson","onExportTxt","onExportCsv","isValidJson","str","JSON","parse","csvFileHeader","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","index","newState","state","setState","window","localStorage","stringify","filter","onAddNewRow","push","exportData","filename","el","setAttribute","encodeURIComponent","display","body","appendChild","removeChild","exportJson","exportTxt","txtFileContent","join","exportCsv","csvFileContent","forEach","rowObj","prop","importJson","alert","clearCache","addButtonIsDisabled","Components_Controls","Components_Table","disabled","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa279167.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass TextArea extends Component {\r\n  componentDidMount(){\r\n    if(this.props.shouldFocusOnCreate){\r\n      this.textArea.focus();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <textarea\r\n        ref={input => {this.textArea = input;}}\r\n        className=\"row-text-area\"\r\n        onChange={this.props.onChange}\r\n        name={this.props.name}\r\n        id={this.props.id}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","export const  NotTested = 'Not tested';\r\nexport const Failed = 'Failed';\r\nexport const Passed =  'Passed';\r\n","import React, { Component } from 'react';\r\n\r\nimport { Passed, Failed } from '../Constants/status';\r\n\r\nclass StatusDot extends Component {\r\n\r\n  getClass = status => {\r\n    if (status === Passed) {\r\n      return 'dot passed';\r\n    } else if (status === Failed) {\r\n      return 'dot failed';\r\n    }\r\n    return 'dot not-tested';\r\n\r\n  }\r\n  render() {\r\n    return (<span className={`${this.getClass(this.props.status)} tooltip animated ${this.props.animatedClassName}`}>\r\n    {\r\n      this.props.toolTipText &&\r\n      <span className=\"tooltiptext\">\r\n        {this.props.toolTipText}\r\n      </span>\r\n    }\r\n      \r\n    </span>)\r\n  }\r\n}\r\n\r\nexport default StatusDot;\r\n","import React, { Component } from \"react\";\r\nimport TextArea from \"./TextArea\";\r\nimport { NotTested, Passed, Failed } from \"../Constants/status\";\r\nimport StatusDot from \"./StatusDot\";\r\n\r\nclass Row extends Component {\r\n  render() {\r\n    return (\r\n      <tr className=\"animated slideInDown faster\">\r\n        <td className=\"table-id-column u-center\">\r\n          <strong>{this.props.id}</strong>\r\n          <button\r\n            className=\"button-danger pure-button u-margin-left important-active-red\"\r\n            onClick={() => this.props.onDelete(this.props.id)}\r\n          >\r\n            <strong>X</strong>\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.case}\r\n            name=\"case\"\r\n            shouldFocusOnCreate\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.expectedResult}\r\n            name=\"expectedResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.actualResult}\r\n            name=\"actualResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPhoneTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPhoneTested}\r\n          /> iPhone<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"zebraTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.zebraTested}\r\n          /> Zebra<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPadTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPadTested}\r\n          /> iPad<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"desktopTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.desktopTested}\r\n          /> Desktop\r\n        </td>\r\n        <td className=\"table-status-column\">\r\n          <div>\r\n            <StatusDot\r\n              status={this.props.status}\r\n              animatedClassName=\"animated \"\r\n            />\r\n          </div>\r\n          <select\r\n            value={this.props.status}\r\n            name=\"status\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n          >\r\n            <option value={NotTested}>{NotTested}</option>\r\n            <option value={Failed}>{Failed}</option>\r\n            <option value={Passed}>{Passed}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\n\r\nimport Row from './Row';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.rows && this.props.rows.length > 0 &&\r\n          <table className=\"pure-table pure-table-horizontal\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Test case</th>\r\n                <th>Expected result</th>\r\n                <th>Actual result</th>\r\n                <th>Devices</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"test-case-table-body\">\r\n              {\r\n                this.props.rows.map((x, i) =>\r\n                  <Row\r\n                    key={x.id}\r\n                    id={i}\r\n                    case={x.case}\r\n                    expectedResult={x.expectedResult}\r\n                    actualResult={x.actualResult}\r\n                    iPhoneTested={x.iPhoneTested}\r\n                    zebraTested={x.zebraTested}\r\n                    iPadTested={x.iPadTested}\r\n                    desktopTested={x.desktopTested}\r\n                    status={x.status}\r\n                    onChange={this.props.onChange}\r\n                    onDelete={this.props.onDelete}\r\n                  />)\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\n\r\nclass Controls extends Component {\r\n\r\n  onFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      var content = e.target.result;\r\n      this.props.onImportData(content);\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button style={{ float: \"right\" }} className=\"button-danger pure-button\" onClick={this.props.onResetData}>Reset data</button>\r\n        <div className=\"u-margin-bottom\">\r\n          <button className=\"button-warning pure-button\" onClick={() => document.getElementById(\"fileInput\").click()}>\r\n            Import json\r\n          </button>\r\n          <button className=\"button-secondary pure-button u-margin-left\" onClick={this.props.onExportJson}>\r\n            Export json\r\n          </button>\r\n          <button className=\"button-secondary pure-button u-margin-left\" onClick={this.props.onExportTxt}>\r\n            Export txt\r\n          </button>\r\n          <button className=\"button-secondary pure-button u-margin-left\" onClick={this.props.onExportCsv}>\r\n            Export CSV\r\n          </button>\r\n          <input type=\"file\" id=\"fileInput\" className=\"u-display-none\" onChange={this.onFileImportChange}/>\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","export const isValidJson = str => {\r\n  try{\r\n    JSON.parse(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n  return true;\r\n}","export const csvFileHeader = 'id,Case,Expected result,Actual result,iPhone passed,Zebra passed,iPad passed,desktop passed,Status\\r\\n';\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Table from './Components/Table';\r\nimport Controls from './Components/Controls';\r\nimport { NotTested } from './Constants/status';\r\nimport StatusDot from './Components/StatusDot';\r\nimport { isValidJson } from './utils/isValidJson';\r\nimport { csvFileHeader } from './Constants/csvFileHeader';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      if (window.localStorage['test-cases'] && window.localStorage['test-cases'].length > 0) {\r\n        this.state = JSON.parse(window.localStorage['test-cases'])\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (e, index) => {\r\n    const newState = this.state;\r\n    if (e.target.type === \"checkbox\") {\r\n      newState.rows[index][e.target.name] = !newState.rows[index][e.target.name];\r\n    } else {\r\n      newState.rows[index][e.target.name] = e.target.value;\r\n    }\r\n    this.setState(newState);\r\n    window.localStorage['test-cases'] = JSON.stringify(newState);\r\n  }\r\n\r\n  onDelete = id => {\r\n    const newState = this.state;\r\n    newState.rows = this.state.rows.filter((x, i) => i !== id);\r\n    this.setState(newState);\r\n    window.localStorage['test-cases'] = JSON.stringify(newState);\r\n  }\r\n\r\n  onAddNewRow = () => {\r\n    const newState = this.state;\r\n    const id = newState.rows.length + 1;\r\n    newState.rows.push({\r\n      id,\r\n      case: \"\",\r\n      expectedResult: \"\",\r\n      actualResult: \"\",\r\n      iPhoneTested: false,\r\n      zebraTested: false,\r\n      iPadTested: false,\r\n      desktopTested: false,\r\n      status: NotTested\r\n    });\r\n    this.setState(newState);\r\n  }\r\n\r\n  exportData = (filename, content) => {\r\n    var el = document.createElement('a');\r\n    el.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content));\r\n    el.setAttribute('download', filename);\r\n    el.style.display = 'none';\r\n    document.body.appendChild(el);\r\n    el.click();\r\n    document.body.removeChild(el);\r\n  }\r\n  exportJson = () => {\r\n    this.exportData(\"test-cases.json\", JSON.stringify(this.state, null, '\\t'));\r\n  }\r\n  exportTxt = () => {\r\n    var txtFileContent = this.state.rows.map(x => `${x.case}\\r\\nExpected result: ${x.expectedResult}\\r\\nActual result: ${x.actualResult}\\r\\nStatus: ${x.status}\\r\\n-----`).join(\"\\r\\n\");\r\n    this.exportData(\"test-cases.txt\", txtFileContent);\r\n  }\r\n  exportCsv = () => {\r\n    let csvFileContent = csvFileHeader;\r\n    \r\n    this.state.rows.forEach(rowObj => {\r\n      let str = '';\r\n      for(var prop in rowObj){\r\n        str += rowObj[prop] + ',';\r\n      }\r\n      str += '\\r\\n';\r\n      csvFileContent += str;\r\n    })\r\n    this.exportData(\"test-cases.csv\", csvFileContent);\r\n  }\r\n\r\n  importJson = content => {\r\n    if (!isValidJson(content)) {\r\n      alert('that\\'s not valid json, is it mate');\r\n      return;\r\n    }\r\n    this.setState(JSON.parse(content));\r\n    window.localStorage['test-cases'] = JSON.stringify(JSON.parse(content));\r\n  }\r\n\r\n  clearCache = () => {\r\n    window.localStorage['test-cases'] = \"\";\r\n    this.setState({ rows: [] });\r\n  }\r\n\r\n  addButtonIsDisabled = () => {\r\n    const rows = this.state.rows;\r\n    if (rows.length > 0) {\r\n      if (rows[rows.length - 1].case.length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"headline u-margin-bottom\">\r\n          <h1>Test cases</h1>\r\n          <span className=\"u-margin-left-xl\">\r\n            {\r\n              this.state.rows.map(x =>\r\n                <StatusDot\r\n                  key={x.id}\r\n                  status={x.status}\r\n                  toolTipText={x.case}\r\n                  animatedClassName=\"fadeInLeft faster\"\r\n                />)\r\n            }\r\n          </span>\r\n        </div>\r\n        <Controls\r\n          onAddNewRow={this.onAddNewRow}\r\n          onExportJson={this.exportJson}\r\n          onExportTxt={this.exportTxt}\r\n          onImportData={this.importJson}\r\n          onResetData={this.clearCache}\r\n          onExportCsv={this.exportCsv}\r\n        />\r\n        <Table\r\n          rows={this.state.rows}\r\n          onChange={this.onChange}\r\n          onDelete={this.onDelete}\r\n        />\r\n        <button className=\"button-success pure-button important-active-green\" disabled={this.addButtonIsDisabled()} onClick={this.onAddNewRow}>\r\n          Add test case\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'purecss';\nimport 'animate.css';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}