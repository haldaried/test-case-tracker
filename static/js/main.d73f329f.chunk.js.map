{"version":3,"sources":["Components/EditableTitle.jsx","Components/TextArea.jsx","Constants/status.js","Components/StatusDot.jsx","Components/CaseRow.jsx","Components/BugRow.jsx","Components/Table.jsx","Constants/rowTypes.js","utils/isValidJson.js","Constants/csvFileHeader.js","Components/Controls.jsx","Components/Todos.jsx","Constants/newCaseRow.js","Constants/newBugRow.js","App.js","serviceWorker.js","index.js"],"names":["EditableTitle","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editMode","_this2","react_default","a","createElement","className","onSubmit","e","preventDefault","setState","type","value","onChange","onClick","React","Component","TextArea","shouldFocusOnCreate","textArea","focus","htmlFor","name","label","style","resize","ref","input","id","Failed","Passed","StatusDot","getClass","status","concat","animatedClassName","CaseRow","bugs","lastBug","length","addBugButtonDisabled","undefined","description","Components_TextArea","case","expectedResult","onAddBug","disabled","checked","iPhoneTested","zebraTested","iPadTested","desktopTested","Components_StatusDot","verticalAlign","onDelete","BugRow","_ref","caseId","Table","casesAndBugsArray","i","rows","row","push","forEach","x","map","Components_CaseRow","key","actualResult","onCaseChange","onDeleteCase","Components_BugRow","onBugChange","onDeleteBug","isValidJson","str","JSON","parse","csvFileHeader","csvContentHeaderIsCorrect","content","lines","split","trim","toLowerCase","Controls","hideControls","onJsonFileImportChange","reader","FileReader","readAsText","target","files","onload","result","onImportJson","alert","onCsvFileImportChange","newState","cols","obj","replace","display","document","getElementById","click","onExportJson","onExportTxt","float","onResetData","Todos","showTodos","getNewCaseRow","getNewBugRow","fixed","App","find","newBugId","window","localStorage","stringify","bugId","testCase","bug","filter","onAddNewRow","exportData","filename","el","setAttribute","encodeURIComponent","body","appendChild","removeChild","exportJson","exportTxt","txtFileContent","join","exportCsv","csvFileContent","rowObj","prop","importJson","json","clearCache","title","addButtonIsDisabled","onTitleChange","Components_EditableTitle","Components_Controls","onExportCsv","Components_Table","Components_Todos","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d73f329f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass EditableTitle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { editMode: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.editMode &&\r\n          <form className=\"pure-form\" onSubmit={e => {e.preventDefault();this.setState({editMode: false})}} >\r\n            <input type=\"text\" value={this.props.value} onChange={this.props.onChange}/>\r\n          </form>\r\n        }\r\n        {\r\n          !this.state.editMode &&\r\n          <h1 onClick={() => this.setState({editMode: true})}>{this.props.value}</h1>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableTitle;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass TextArea extends Component {\r\n  componentDidMount() {\r\n    if (this.props.shouldFocusOnCreate) {\r\n      this.textArea.focus();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"pure-form\">\r\n        <label htmlFor={this.props.name}>\r\n            <strong>{this.props.label}</strong>\r\n        </label>\r\n        <textarea\r\n          style={{\"resize\": \"none\"}}\r\n          ref={input => { this.textArea = input; }}\r\n          className=\"row-text-area\"\r\n          onChange={this.props.onChange}\r\n          name={this.props.name}\r\n          id={this.props.id}\r\n          value={this.props.value}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","export const  NotTested = 'Not tested';\r\nexport const Failed = 'Failed';\r\nexport const Passed =  'Passed';\r\n","import React, { Component } from 'react';\r\n\r\nimport { Passed, Failed } from '../Constants/status';\r\n\r\nclass StatusDot extends Component {\r\n\r\n  getClass = status => {\r\n    if (status === Passed) {\r\n      return 'dot passed';\r\n    } else if (status === Failed) {\r\n      return 'dot failed';\r\n    }\r\n    return 'dot not-tested';\r\n\r\n  }\r\n  render() {\r\n    return (\r\n    <span\r\n      className={`${this.getClass(this.props.status)} animated ${this.props.animatedClassName}`}\r\n    ></span>)\r\n  }\r\n}\r\n\r\nexport default StatusDot;\r\n","import React, { Component } from \"react\";\r\nimport TextArea from \"./TextArea\";\r\nimport { NotTested, Passed, Failed } from \"../Constants/status\";\r\nimport StatusDot from \"./StatusDot\";\r\n\r\nclass CaseRow extends Component {\r\n\r\n  render() {\r\n    const bugs = this.props.bugs;\r\n    const lastBug = bugs[bugs.length - 1];\r\n    const addBugButtonDisabled =  lastBug !== undefined && lastBug.description.length < 1;\r\n    return (\r\n      <tr className=\"animated fadeIn faster\">\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.case}\r\n            name=\"case\"\r\n            label={`Test case ${this.props.id}`}\r\n            shouldFocusOnCreate={this.props.case.length === 0}\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.expectedResult}\r\n            label=\"Expected result\"\r\n            name=\"expectedResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            className=\"button-danger pure-button\"\r\n            onClick={() => this.props.onAddBug(this.props.id)}\r\n            disabled={addBugButtonDisabled}\r\n          >\r\n            + Bug\r\n            </button>\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPhoneTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPhoneTested}\r\n          /> iPhone<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"zebraTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.zebraTested}\r\n          /> Zebra<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPadTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPadTested}\r\n          /> iPad<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"desktopTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.desktopTested}\r\n          /> Desktop\r\n        </td>\r\n        <td className=\"table-status-column\">\r\n          <StatusDot\r\n            status={this.props.status}\r\n          />\r\n          <select\r\n            value={this.props.status}\r\n            className=\"u-margin-left\"\r\n            style={{\"verticalAlign\":\"middle\"}}\r\n            name=\"status\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n          >\r\n            <option value={NotTested}>{NotTested}</option>\r\n            <option value={Failed}>{Failed}</option>\r\n            <option value={Passed}>{Passed}</option>\r\n          </select>\r\n        </td>\r\n        <td className=\"table-id-column u-center\">\r\n          <button\r\n            className=\"button-danger pure-button u-margin-left important-active-red\"\r\n            onClick={() => this.props.onDelete(this.props.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CaseRow;\r\n","import React from 'react';\r\nimport TextArea from './TextArea';\r\n\r\nconst BugRow = ({ caseId, id, description, onChange, onDelete }) => (\r\n  <tr className=\"animated fadeIn faster\">\r\n    <td></td>\r\n    <td>\r\n      <TextArea\r\n        value={description}\r\n        shouldFocusOnCreate={description.length === 0}\r\n        name=\"description\"\r\n        onChange={e => onChange(e, caseId, id)}\r\n        label={`Bug ${id}`}\r\n      />\r\n    </td>\r\n    <td></td>\r\n    <td></td>\r\n    <td></td>\r\n    <td>\r\n      <button\r\n        className=\"button-danger pure-button u-margin-left important-active-red\"\r\n        onClick={() => onDelete(caseId, id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default BugRow;\r\n","import React, { Component } from 'react';\r\nimport CaseRow from './CaseRow';\r\nimport BugRow from './BugRow';\r\nimport * as RowTypes from '../Constants/rowTypes';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const casesAndBugsArray = [];\r\n    for (let i = 0; i < this.props.rows.length; i++) {\r\n      const row = this.props.rows[i];\r\n      casesAndBugsArray.push(row);\r\n      row.bugs.forEach(x => casesAndBugsArray.push(x));\r\n    }\r\n    return (\r\n      <div>\r\n        {this.props.rows && this.props.rows.length > 0 &&\r\n          <table className=\"pure-table pure-table-horizontal animated fadeIn\">\r\n            <thead>\r\n              <tr>\r\n                <th></th>\r\n                <th></th>\r\n                <th></th>\r\n                <th>Devices</th>\r\n                <th>Status</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"test-case-table-body\">\r\n              {\r\n                casesAndBugsArray.map((x, i) => x.type === RowTypes.CASE_ROW ?\r\n                  <CaseRow\r\n                    key={x.id}\r\n                    id={x.id}\r\n                    case={x.case}\r\n                    bugs={x.bugs}\r\n                    expectedResult={x.expectedResult}\r\n                    actualResult={x.actualResult}\r\n                    iPhoneTested={x.iPhoneTested}\r\n                    zebraTested={x.zebraTested}\r\n                    iPadTested={x.iPadTested}\r\n                    desktopTested={x.desktopTested}\r\n                    status={x.status}\r\n                    onChange={this.props.onCaseChange}\r\n                    onDelete={this.props.onDeleteCase}\r\n                    onAddBug={this.props.onAddBug}\r\n                  /> :\r\n                  <BugRow\r\n                    id={x.id}\r\n                    caseId={x.caseId}\r\n                    key={`${x.caseId} - ${x.id}`}\r\n                    description={x.description}\r\n                    onChange={this.props.onBugChange}\r\n                    onDelete={this.props.onDeleteBug}\r\n                  />)\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","export const CASE_ROW = 'CASE_ROW';\r\nexport const BUG_ROW = 'BUG_ROW';\r\n","export const isValidJson = str => {\r\n  try{\r\n    JSON.parse(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n  return true;\r\n}","export const csvFileHeader = 'id,Case,Expected result,Actual result,iPhone passed,Zebra passed,iPad passed,desktop passed,Status\\r\\n';\r\nexport const csvContentHeaderIsCorrect = content =>{\r\n  var lines = content.split(\"\\n\");\r\n  return csvFileHeader.trim().toLowerCase() === lines[0].trim().toLowerCase();\r\n}","import React, { Component } from 'react';\r\nimport { isValidJson } from '../utils/isValidJson';\r\nimport { csvContentHeaderIsCorrect } from '../Constants/csvFileHeader';\r\n\r\nclass Controls extends Component {\r\n  state = {\r\n    hideControls: true\r\n  };\r\n\r\n  onJsonFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      var content = e.target.result;\r\n      if (!isValidJson(content)) {\r\n        alert('that\\'s not valid json, is it mate');\r\n        return;\r\n      }\r\n      this.props.onImportJson(JSON.parse(content));\r\n    };\r\n  }\r\n\r\n  onCsvFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      const content = e.target.result;\r\n      if (!csvContentHeaderIsCorrect(content)) {\r\n        alert('I don\\'t like the header of that file\\'s content');\r\n        return;\r\n      }\r\n      const newState = { rows: [] };\r\n      const lines = content.split(\"\\n\");\r\n      for (let i = 1; i < lines.length; i++) {\r\n        let cols = lines[i].split(\"\\\",\");\r\n        let obj = {};\r\n        if (cols[0].length < 1 || cols[1].length < 1) {\r\n          break;\r\n        }\r\n        obj.id = cols[0].replace(/\"/g, \"\");\r\n        obj.case = cols[1].replace(/\"/g, \"\");\r\n        obj.expectedResult = cols[2].replace(/\"/g, \"\");\r\n        obj.actualResult = cols[3].replace(/\"/g, \"\");\r\n        obj.iPhoneTested = cols[4].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.zebraTested = cols[5].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.iPadTested = cols[6].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.desktopTested = cols[7].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.status = cols[8].replace(/\"/g, \"\")\r\n        newState.rows.push(obj);\r\n      }\r\n      this.props.onImportJson(newState);\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"u-margin-bottom\">\r\n          <button\r\n            className=\"pure-button\"\r\n            onClick={() => this.setState({ hideControls: !this.state.hideControls })}\r\n          >\r\n            Show / hide data controls\r\n          </button>\r\n          {\r\n            !this.state.hideControls &&\r\n            <div className=\"animated flipInX faster\" style={{ \"display\": \"inline-block\" }}>\r\n              <button\r\n                className=\"button-warning pure-button u-margin-left\"\r\n                onClick={() => document.getElementById(\"jsonFileInput\").click()}\r\n              >\r\n                Import json\r\n              </button>\r\n              {/* <button\r\n                className=\"button-warning pure-button u-margin-left\"\r\n                onClick={() => document.getElementById(\"csvFileInput\").click()}\r\n              >\r\n                Import CSV\r\n              </button> */}\r\n              <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportJson}\r\n              >\r\n                Export json\r\n              </button>\r\n              <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportTxt}\r\n              >\r\n                Export txt\r\n              </button>\r\n              {/* <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportCsv}\r\n              >\r\n                Export CSV\r\n              </button> */}\r\n              <input\r\n                type=\"file\"\r\n                id=\"jsonFileInput\"\r\n                className=\"u-display-none\"\r\n                onChange={this.onJsonFileImportChange}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                id=\"csvFileInput\"\r\n                className=\"u-display-none\"\r\n                onChange={this.onCsvFileImportChange}\r\n              />\r\n\r\n            </div>\r\n          }\r\n          <button\r\n            style={{ float: \"right\" }}\r\n            className=\"button-danger pure-button\"\r\n            onClick={this.props.onResetData}\r\n          >\r\n            Reset data\r\n          </button>\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nclass Todos extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showTodos: false };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          className=\"pure-button\"\r\n          onClick={() => this.setState({ showTodos: !this.state.showTodos })}\r\n        >\r\n          Show /hide todos\r\n        </button>\r\n        {\r\n          this.state.showTodos &&\r\n          <ul>\r\n            <li>make title editable and base exported file names off it</li>\r\n            <li>enhance bug tracking feature</li>\r\n            <li>support mobile device width</li>\r\n            <li>write unit tests</li>\r\n            <li>refactor components</li>\r\n            <li>import/ export excel files</li>\r\n          </ul>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todos;\r\n","import { NotTested } from './status';\r\nimport { CASE_ROW } from './rowTypes';\r\n\r\nexport const getNewCaseRow = id => ({\r\n  type: CASE_ROW,\r\n  id,\r\n  case: \"\",\r\n  expectedResult: \"\",\r\n  iPhoneTested: false,\r\n  zebraTested: false,\r\n  iPadTested: false,\r\n  desktopTested: false,\r\n  status: NotTested,\r\n  bugs: []\r\n});","import { BUG_ROW } from './rowTypes';\r\n\r\nexport const getNewBugRow = (id, caseId) => ({\r\n  caseId,\r\n  id,\r\n  type: BUG_ROW,\r\n  description: \"\",\r\n  fixed: false\r\n});","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport EditableTitle from './Components/EditableTitle';\r\nimport Table from \"./Components/Table\";\r\nimport Controls from \"./Components/Controls\";\r\nimport StatusDot from \"./Components/StatusDot\";\r\nimport Todos from './Components/Todos';\r\nimport { csvFileHeader } from \"./Constants/csvFileHeader\";\r\nimport { getNewCaseRow } from './Constants/newCaseRow';\r\nimport { getNewBugRow } from './Constants/newBugRow';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rows: [],\r\n      title: \"Test cases\"\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      if (\r\n        window.localStorage[\"test-cases\"] &&\r\n        window.localStorage[\"test-cases\"].length > 0\r\n      ) {\r\n        this.state = JSON.parse(window.localStorage[\"test-cases\"]);\r\n      }\r\n    }\r\n  }\r\n\r\n  onAddBug = caseId => {\r\n    const newState = this.state;\r\n    const row = newState.rows.find(x => x.id === caseId);\r\n    let newBugId = row.bugs.length + 1;\r\n    row.bugs.push(getNewBugRow(newBugId, caseId));\r\n    this.setState(newState);\r\n  };\r\n\r\n  onCaseChange = (e, id) => {\r\n    const newState = this.state;\r\n    const row = newState.rows.find(x => x.id === id);\r\n    if (e.target.type === \"checkbox\") {\r\n      row[e.target.name] = !row[e.target.name];\r\n    } else {\r\n      row[e.target.name] = e.target.value;\r\n    }\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onBugChange = (e, caseId, bugId) => {\r\n    const newState = this.state;\r\n    const bug = newState.rows.find(testCase => testCase.id === caseId).bugs.find(bug => bug.id === bugId);\r\n    bug[e.target.name] = e.target.value;\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  }\r\n\r\n  onDeleteCase = id => {\r\n    const newState = this.state;\r\n    newState.rows = this.state.rows.filter(x => x.id !== id);\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onDeleteBug = (caseId, bugId) => {\r\n    const newState = this.state;\r\n    const testCase = newState.rows.find(testCase => testCase.id === caseId);\r\n    testCase.bugs = testCase.bugs.filter(bug => bug.id !== bugId);\r\n    this.setState(newState);\r\n  }\r\n\r\n  onAddNewRow = () => {\r\n    const newState = this.state;\r\n    const id = newState.rows.length + 1;\r\n    newState.rows.push(getNewCaseRow(id));\r\n    this.setState(newState);\r\n  };\r\n\r\n  exportData = (filename, content) => {\r\n    var el = document.createElement(\"a\");\r\n    el.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content)\r\n    );\r\n    el.setAttribute(\"download\", filename);\r\n    el.style.display = \"none\";\r\n    document.body.appendChild(el);\r\n    el.click();\r\n    document.body.removeChild(el);\r\n  };\r\n  exportJson = () => {\r\n    this.exportData(\"test-cases.json\", JSON.stringify(this.state, null, \"\\t\"));\r\n  };\r\n  exportTxt = () => {\r\n    var txtFileContent = this.state.rows\r\n      .map(\r\n        x =>\r\n          `${x.case}\\r\\nExpected result: ${\r\n          x.expectedResult\r\n          }\\r\\nActual result: ${x.actualResult}\\r\\nStatus: ${x.status}\\r\\n-----`\r\n      )\r\n      .join(\"\\r\\n\");\r\n    this.exportData(\"test-cases.txt\", txtFileContent);\r\n  };\r\n  exportCsv = () => {\r\n    let csvFileContent = csvFileHeader;\r\n\r\n    this.state.rows.forEach(rowObj => {\r\n      let str = \"\";\r\n      for (var prop in rowObj) {\r\n        str += \"\\\"\" + rowObj[prop] + \"\\\",\";\r\n      }\r\n      str += \"\\r\\n\";\r\n      csvFileContent += str;\r\n    });\r\n    this.exportData(\"test-cases.csv\", csvFileContent);\r\n  };\r\n\r\n  importJson = json => {\r\n    this.setState(json);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(json);\r\n  };\r\n\r\n  clearCache = () => {\r\n    window.localStorage[\"test-cases\"] = \"\";\r\n    this.setState({ rows: [], title: \"test cases\" });\r\n  };\r\n\r\n  addButtonIsDisabled = () => {\r\n    const rows = this.state.rows;\r\n    if (rows.length > 0) {\r\n      if (rows[rows.length - 1].case.length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  onTitleChange = e => {\r\n    this.setState({title: e.target.value});\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"headline u-margin-bottom\">\r\n          {/* <h1>Test cases</h1> */}\r\n          <EditableTitle\r\n            value={this.state.title}\r\n            onChange={e => this.setState({ title: e.target.value })}\r\n          />\r\n          <span className=\"u-margin-left-xl\">\r\n            {this.state.rows.map(x => (\r\n              <StatusDot\r\n                key={x.id}\r\n                status={x.status}\r\n                animatedClassName=\"u-margin-left fadeInLeft faster\"\r\n              />\r\n            ))}\r\n          </span>\r\n        </div>\r\n        <Controls\r\n          onAddNewRow={this.onAddNewRow}\r\n          onExportJson={this.exportJson}\r\n          onExportTxt={this.exportTxt}\r\n          onResetData={this.clearCache}\r\n          onExportCsv={this.exportCsv}\r\n          onImportJson={this.importJson}\r\n        />\r\n        <Table\r\n          rows={this.state.rows}\r\n          onCaseChange={this.onCaseChange}\r\n          onBugChange={this.onBugChange}\r\n          onDeleteCase={this.onDeleteCase}\r\n          onAddBug={this.onAddBug}\r\n          onDeleteBug={this.onDeleteBug}\r\n        />\r\n        <button\r\n          className=\"button-secondary pure-button important-active-green\"\r\n          disabled={this.addButtonIsDisabled()}\r\n          onClick={this.onAddNewRow}\r\n        >\r\n          Add test case\r\n        </button>\r\n        <div className=\"u-margin-top\">\r\n          <Todos />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'animate.css';\nimport 'purecss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}