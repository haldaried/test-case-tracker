{"version":3,"sources":["Components/TextArea.jsx","Constants/status.js","Components/StatusDot.jsx","Components/Row.jsx","Components/Table.jsx","utils/isValidJson.js","Constants/csvFileHeader.js","Components/Controls.jsx","Constants/newCaseRow.js","App.js","serviceWorker.js","index.js"],"names":["TextArea","this","props","shouldFocusOnCreate","textArea","focus","_this","react_default","a","createElement","ref","input","className","onChange","name","id","value","Component","Failed","Passed","StatusDot","getClass","status","concat","animatedClassName","toolTipText","Row","onClick","onDelete","Components_TextArea","e","case","length","expectedResult","actualResult","type","checked","iPhoneTested","zebraTested","iPadTested","desktopTested","Components_StatusDot","Table","rows","map","x","i","Components_Row","key","isValidJson","str","JSON","parse","csvFileHeader","csvContentHeaderIsCorrect","content","lines","split","trim","toLowerCase","Controls","state","controlButtonsHidden","onJsonFileImportChange","reader","FileReader","readAsText","target","files","onload","result","onImportJson","alert","onCsvFileImportChange","newState","cols","obj","replace","push","_this2","setState","document","getElementById","click","onExportJson","onExportTxt","onExportCsv","style","float","onResetData","getNewCaseRow","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","index","window","localStorage","stringify","filter","onAddNewRow","exportData","filename","el","setAttribute","encodeURIComponent","display","body","appendChild","removeChild","exportJson","exportTxt","txtFileContent","join","exportCsv","csvFileContent","forEach","rowObj","prop","importJson","json","clearCache","addButtonIsDisabled","Components_Controls","Components_Table","disabled","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55ea3ff6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass TextArea extends Component {\r\n  componentDidMount(){\r\n    if(this.props.shouldFocusOnCreate){\r\n      this.textArea.focus();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <textarea\r\n        ref={input => {this.textArea = input;}}\r\n        className=\"row-text-area\"\r\n        onChange={this.props.onChange}\r\n        name={this.props.name}\r\n        id={this.props.id}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","export const  NotTested = 'Not tested';\r\nexport const Failed = 'Failed';\r\nexport const Passed =  'Passed';\r\n","import React, { Component } from 'react';\r\n\r\nimport { Passed, Failed } from '../Constants/status';\r\n\r\nclass StatusDot extends Component {\r\n\r\n  getClass = status => {\r\n    if (status === Passed) {\r\n      return 'dot passed';\r\n    } else if (status === Failed) {\r\n      return 'dot failed';\r\n    }\r\n    return 'dot not-tested';\r\n\r\n  }\r\n  render() {\r\n    return (<span className={`${this.getClass(this.props.status)} tooltip animated ${this.props.animatedClassName}`}>\r\n    {\r\n      this.props.toolTipText &&\r\n      <span className=\"tooltiptext\">\r\n        {this.props.toolTipText}\r\n      </span>\r\n    }\r\n      \r\n    </span>)\r\n  }\r\n}\r\n\r\nexport default StatusDot;\r\n","import React, { Component } from \"react\";\r\nimport TextArea from \"./TextArea\";\r\nimport { NotTested, Passed, Failed } from \"../Constants/status\";\r\nimport StatusDot from \"./StatusDot\";\r\n\r\nclass Row extends Component {\r\n  render() {\r\n    return (\r\n      <tr className=\"animated slideInDown faster\">\r\n        <td className=\"table-id-column u-center\">\r\n          <strong>{this.props.id}</strong>\r\n          <button\r\n            className=\"button-danger pure-button u-margin-left important-active-red\"\r\n            onClick={() => this.props.onDelete(this.props.id)}\r\n          >\r\n            <strong>X</strong>\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.case}\r\n            name=\"case\"\r\n            shouldFocusOnCreate={this.props.case.length === 0}\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.expectedResult}\r\n            name=\"expectedResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.actualResult}\r\n            name=\"actualResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPhoneTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPhoneTested}\r\n          /> iPhone<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"zebraTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.zebraTested}\r\n          /> Zebra<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPadTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPadTested}\r\n          /> iPad<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"desktopTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.desktopTested}\r\n          /> Desktop\r\n        </td>\r\n        <td className=\"table-status-column\">\r\n          <div>\r\n            <StatusDot\r\n              status={this.props.status}\r\n              animatedClassName=\"animated \"\r\n            />\r\n          </div>\r\n          <select\r\n            value={this.props.status}\r\n            name=\"status\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n          >\r\n            <option value={NotTested}>{NotTested}</option>\r\n            <option value={Failed}>{Failed}</option>\r\n            <option value={Passed}>{Passed}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\n\r\nimport Row from './Row';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.rows && this.props.rows.length > 0 &&\r\n          <table className=\"pure-table pure-table-horizontal\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Test case</th>\r\n                <th>Expected result</th>\r\n                <th>Actual result</th>\r\n                <th>Devices</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"test-case-table-body\">\r\n              {\r\n                this.props.rows.map((x, i) =>\r\n                  <Row\r\n                    key={x.id}\r\n                    id={i}\r\n                    case={x.case}\r\n                    expectedResult={x.expectedResult}\r\n                    actualResult={x.actualResult}\r\n                    iPhoneTested={x.iPhoneTested}\r\n                    zebraTested={x.zebraTested}\r\n                    iPadTested={x.iPadTested}\r\n                    desktopTested={x.desktopTested}\r\n                    status={x.status}\r\n                    onChange={this.props.onChange}\r\n                    onDelete={this.props.onDelete}\r\n                  />)\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","export const isValidJson = str => {\r\n  try{\r\n    JSON.parse(str);\r\n  } catch(e){\r\n    return false;\r\n  }\r\n  return true;\r\n}","export const csvFileHeader = 'id,Case,Expected result,Actual result,iPhone passed,Zebra passed,iPad passed,desktop passed,Status\\r\\n';\r\nexport const csvContentHeaderIsCorrect = content =>{\r\n  var lines = content.split(\"\\n\");\r\n  return csvFileHeader.trim().toLowerCase() === lines[0].trim().toLowerCase();\r\n}","import React, { Component } from 'react';\r\nimport { isValidJson } from '../utils/isValidJson';\r\nimport { csvContentHeaderIsCorrect } from '../Constants/csvFileHeader';\r\n\r\nclass Controls extends Component {\r\n  state = {\r\n    controlButtonsHidden: true\r\n  };\r\n\r\n  onJsonFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      var content = e.target.result;\r\n      if (!isValidJson(content)) {\r\n        alert('that\\'s not valid json, is it mate');\r\n        return;\r\n      }\r\n      this.props.onImportJson(JSON.parse(content));\r\n    };\r\n  }\r\n\r\n  onCsvFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      const content = e.target.result;\r\n      if (!csvContentHeaderIsCorrect(content)) {\r\n        alert('I don\\'t like the header of that file\\'s content');\r\n        return;\r\n      }\r\n      const newState = { rows: [] };\r\n      const lines = content.split(\"\\n\");\r\n      for (let i = 1; i < lines.length; i++) {\r\n        let cols = lines[i].split(\"\\\",\");\r\n        let obj = {};\r\n        if (cols[0].length < 1 || cols[1].length < 1) {\r\n          break;\r\n        }\r\n        obj.id = cols[0].replace(/\"/g, \"\");\r\n        obj.case = cols[1].replace(/\"/g, \"\");\r\n        obj.expectedResult = cols[2].replace(/\"/g, \"\");\r\n        obj.actualResult = cols[3].replace(/\"/g, \"\");\r\n        obj.iPhoneTested = cols[4].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.zebraTested = cols[5].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.iPadTested = cols[6].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.desktopTested = cols[7].replace(/\"/g, \"\").toLowerCase() === \"true\";\r\n        obj.status = cols[8].replace(/\"/g, \"\")\r\n        newState.rows.push(obj);\r\n      }\r\n      this.props.onImportJson(newState);\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div className=\"u-margin-bottom\">\r\n          <button\r\n            className=\"pure-button\"\r\n            onClick={() => this.setState({ controlButtonsHidden: !this.state.controlButtonsHidden })}\r\n          >\r\n            {this.state.controlButtonsHidden ? 'Show data controls' : 'Hide data controls'}\r\n          </button>\r\n          {\r\n            !this.state.controlButtonsHidden &&\r\n            <span className=\"animated fadeIn fast\">\r\n              <button\r\n                className=\"button-warning pure-button u-margin-left\"\r\n                onClick={() => document.getElementById(\"jsonFileInput\").click()}\r\n              >\r\n                Import json\r\n              </button>\r\n              <button\r\n                className=\"button-warning pure-button u-margin-left\"\r\n                onClick={() => document.getElementById(\"csvFileInput\").click()}\r\n              >\r\n                Import CSV\r\n              </button>\r\n              <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportJson}\r\n              >\r\n                Export json\r\n              </button>\r\n              <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportTxt}\r\n              >\r\n                Export txt\r\n              </button>\r\n              <button\r\n                className=\"button-secondary pure-button u-margin-left\"\r\n                onClick={this.props.onExportCsv}\r\n              >\r\n                Export CSV\r\n              </button>\r\n              <input\r\n                type=\"file\"\r\n                id=\"jsonFileInput\"\r\n                className=\"u-display-none\"\r\n                onChange={this.onJsonFileImportChange}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                id=\"csvFileInput\"\r\n                className=\"u-display-none\"\r\n                onChange={this.onCsvFileImportChange}\r\n              />\r\n              <button\r\n                style={{ float: \"right\" }}\r\n                className=\"button-danger pure-button\"\r\n                onClick={this.props.onResetData}\r\n              >\r\n                Reset data\r\n              </button>\r\n            </span>\r\n          }\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import {NotTested} from './status';\r\n\r\nexport const getNewCaseRow = id => ({\r\n  id,\r\n  case: \"\",\r\n  expectedResult: \"\",\r\n  actualResult: \"\",\r\n  iPhoneTested: false,\r\n  zebraTested: false,\r\n  iPadTested: false,\r\n  desktopTested: false,\r\n  status: NotTested\r\n});","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Table from \"./Components/Table\";\r\nimport Controls from \"./Components/Controls\";\r\nimport StatusDot from \"./Components/StatusDot\";\r\nimport { csvFileHeader } from \"./Constants/csvFileHeader\";\r\nimport { getNewCaseRow } from './Constants/newCaseRow';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      if (\r\n        window.localStorage[\"test-cases\"] &&\r\n        window.localStorage[\"test-cases\"].length > 0\r\n      ) {\r\n        this.state = JSON.parse(window.localStorage[\"test-cases\"]);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (e, index) => {\r\n    const newState = this.state;\r\n    if (e.target.type === \"checkbox\") {\r\n      newState.rows[index][e.target.name] = !newState.rows[index][\r\n        e.target.name\r\n      ];\r\n    } else {\r\n      newState.rows[index][e.target.name] = e.target.value;\r\n    }\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onDelete = id => {\r\n    const newState = this.state;\r\n    newState.rows = this.state.rows.filter((x, i) => i !== id);\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onAddNewRow = () => {\r\n    const newState = this.state;\r\n    const id = newState.rows.length + 1;\r\n    newState.rows.push(getNewCaseRow(id));\r\n    this.setState(newState);\r\n  };\r\n\r\n  exportData = (filename, content) => {\r\n    var el = document.createElement(\"a\");\r\n    el.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content)\r\n    );\r\n    el.setAttribute(\"download\", filename);\r\n    el.style.display = \"none\";\r\n    document.body.appendChild(el);\r\n    el.click();\r\n    document.body.removeChild(el);\r\n  };\r\n  exportJson = () => {\r\n    this.exportData(\"test-cases.json\", JSON.stringify(this.state, null, \"\\t\"));\r\n  };\r\n  exportTxt = () => {\r\n    var txtFileContent = this.state.rows\r\n      .map(\r\n        x =>\r\n          `${x.case}\\r\\nExpected result: ${\r\n            x.expectedResult\r\n          }\\r\\nActual result: ${x.actualResult}\\r\\nStatus: ${x.status}\\r\\n-----`\r\n      )\r\n      .join(\"\\r\\n\");\r\n    this.exportData(\"test-cases.txt\", txtFileContent);\r\n  };\r\n  exportCsv = () => {\r\n    let csvFileContent = csvFileHeader;\r\n\r\n    this.state.rows.forEach(rowObj => {\r\n      let str = \"\";\r\n      for (var prop in rowObj) {\r\n        str += \"\\\"\" + rowObj[prop] + \"\\\",\";\r\n      }\r\n      str += \"\\r\\n\";\r\n      csvFileContent += str;\r\n    });\r\n    this.exportData(\"test-cases.csv\", csvFileContent);\r\n  };\r\n\r\n  importJson = json => {\r\n    this.setState(json);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(json);\r\n  };\r\n\r\n  clearCache = () => {\r\n    window.localStorage[\"test-cases\"] = \"\";\r\n    this.setState({ rows: [] });\r\n  };\r\n\r\n  addButtonIsDisabled = () => {\r\n    const rows = this.state.rows;\r\n    if (rows.length > 0) {\r\n      if (rows[rows.length - 1].case.length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"headline u-margin-bottom\">\r\n          <h1>Test cases</h1>\r\n          <span className=\"u-margin-left-xl\">\r\n            {this.state.rows.map(x => (\r\n              <StatusDot\r\n                key={x.id}\r\n                status={x.status}\r\n                toolTipText={x.case}\r\n                animatedClassName=\"fadeInLeft faster\"\r\n              />\r\n            ))}\r\n          </span>\r\n        </div>\r\n        <Controls\r\n          onAddNewRow={this.onAddNewRow}\r\n          onExportJson={this.exportJson}\r\n          onExportTxt={this.exportTxt}\r\n          onResetData={this.clearCache}\r\n          onExportCsv={this.exportCsv}\r\n          onImportJson={this.importJson}\r\n        />\r\n        <Table\r\n          rows={this.state.rows}\r\n          onChange={this.onChange}\r\n          onDelete={this.onDelete}\r\n        />\r\n        <button\r\n          className=\"button-success pure-button important-active-green\"\r\n          disabled={this.addButtonIsDisabled()}\r\n          onClick={this.onAddNewRow}\r\n        >\r\n          Add test case\r\n        </button>\r\n        <div className=\"u-margin-top\">\r\n          <h3>todo</h3>\r\n          <ul>\r\n            <li>import/ export excel files</li>\r\n            <li>figure out way of support bug tracking for each test case and device</li>\r\n            <li>support mobile device width</li>\r\n            <li>write unit tests</li>\r\n            <li>refactor components</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'animate.css';\nimport 'purecss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}