{"version":3,"sources":["Components/TextArea.jsx","Constants/status.js","Components/StatusDot.jsx","Components/Row.jsx","Components/Table.jsx","utils/isValidJson.js","Constants/csvFileHeader.js","Components/Controls.jsx","App.js","serviceWorker.js","index.js"],"names":["TextArea","this","props","shouldFocusOnCreate","textArea","focus","_this","react_default","a","createElement","ref","input","className","onChange","name","id","value","Component","NotTested","Failed","Passed","StatusDot","getClass","status","concat","animatedClassName","toolTipText","Row","onClick","onDelete","Components_TextArea","e","case","expectedResult","actualResult","type","checked","iPhoneTested","zebraTested","iPadTested","desktopTested","Components_StatusDot","Table","rows","length","map","x","i","Components_Row","key","isValidJson","str","JSON","parse","csvFileHeader","csvContentHeaderIsCorrect","content","lines","split","trim","toLowerCase","Controls","onJsonFileImportChange","reader","FileReader","readAsText","target","files","onload","result","onImportJson","alert","onCsvFileImportChange","newState","cols","obj","push","style","float","onResetData","document","getElementById","click","onExportJson","onExportTxt","onExportCsv","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","index","state","setState","window","localStorage","stringify","filter","onAddNewRow","exportData","filename","el","setAttribute","encodeURIComponent","display","body","appendChild","removeChild","exportJson","exportTxt","txtFileContent","join","exportCsv","csvFileContent","forEach","rowObj","prop","importJson","json","clearCache","addButtonIsDisabled","Components_Controls","Components_Table","disabled","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.988b9aa5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass TextArea extends Component {\r\n  componentDidMount(){\r\n    if(this.props.shouldFocusOnCreate){\r\n      this.textArea.focus();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <textarea\r\n        ref={input => {this.textArea = input;}}\r\n        className=\"row-text-area\"\r\n        onChange={this.props.onChange}\r\n        name={this.props.name}\r\n        id={this.props.id}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextArea;\r\n","export const  NotTested = 'Not tested';\nexport const Failed = 'Failed';\nexport const Passed =  'Passed';\n","import React, { Component } from 'react';\r\n\r\nimport { Passed, Failed } from '../Constants/status';\r\n\r\nclass StatusDot extends Component {\r\n\r\n  getClass = status => {\r\n    if (status === Passed) {\r\n      return 'dot passed';\r\n    } else if (status === Failed) {\r\n      return 'dot failed';\r\n    }\r\n    return 'dot not-tested';\r\n\r\n  }\r\n  render() {\r\n    return (<span className={`${this.getClass(this.props.status)} tooltip animated ${this.props.animatedClassName}`}>\r\n    {\r\n      this.props.toolTipText &&\r\n      <span className=\"tooltiptext\">\r\n        {this.props.toolTipText}\r\n      </span>\r\n    }\r\n      \r\n    </span>)\r\n  }\r\n}\r\n\r\nexport default StatusDot;\r\n","import React, { Component } from \"react\";\r\nimport TextArea from \"./TextArea\";\r\nimport { NotTested, Passed, Failed } from \"../Constants/status\";\r\nimport StatusDot from \"./StatusDot\";\r\n\r\nclass Row extends Component {\r\n  render() {\r\n    return (\r\n      <tr className=\"animated slideInDown faster\">\r\n        <td className=\"table-id-column u-center\">\r\n          <strong>{this.props.id}</strong>\r\n          <button\r\n            className=\"button-danger pure-button u-margin-left important-active-red\"\r\n            onClick={() => this.props.onDelete(this.props.id)}\r\n          >\r\n            <strong>X</strong>\r\n          </button>\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.case}\r\n            name=\"case\"\r\n            shouldFocusOnCreate\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.expectedResult}\r\n            name=\"expectedResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <TextArea\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            value={this.props.actualResult}\r\n            name=\"actualResult\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPhoneTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPhoneTested}\r\n          /> iPhone<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"zebraTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.zebraTested}\r\n          /> Zebra<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"iPadTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.iPadTested}\r\n          /> iPad<br />\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"desktopTested\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n            checked={this.props.desktopTested}\r\n          /> Desktop\r\n        </td>\r\n        <td className=\"table-status-column\">\r\n          <div>\r\n            <StatusDot\r\n              status={this.props.status}\r\n              animatedClassName=\"animated \"\r\n            />\r\n          </div>\r\n          <select\r\n            value={this.props.status}\r\n            name=\"status\"\r\n            onChange={e => this.props.onChange(e, this.props.id)}\r\n          >\r\n            <option value={NotTested}>{NotTested}</option>\r\n            <option value={Failed}>{Failed}</option>\r\n            <option value={Passed}>{Passed}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\n\r\nimport Row from './Row';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.rows && this.props.rows.length > 0 &&\r\n          <table className=\"pure-table pure-table-horizontal\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Test case</th>\r\n                <th>Expected result</th>\r\n                <th>Actual result</th>\r\n                <th>Devices</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"test-case-table-body\">\r\n              {\r\n                this.props.rows.map((x, i) =>\r\n                  <Row\r\n                    key={x.id}\r\n                    id={i}\r\n                    case={x.case}\r\n                    expectedResult={x.expectedResult}\r\n                    actualResult={x.actualResult}\r\n                    iPhoneTested={x.iPhoneTested}\r\n                    zebraTested={x.zebraTested}\r\n                    iPadTested={x.iPadTested}\r\n                    desktopTested={x.desktopTested}\r\n                    status={x.status}\r\n                    onChange={this.props.onChange}\r\n                    onDelete={this.props.onDelete}\r\n                  />)\r\n              }\r\n            </tbody>\r\n          </table>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","export const isValidJson = str => {\n  try{\n    JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n  return true;\n}","export const csvFileHeader = 'id,Case,Expected result,Actual result,iPhone passed,Zebra passed,iPad passed,desktop passed,Status\\r\\n';\r\nexport const csvContentHeaderIsCorrect = content =>{\r\n  var lines = content.split(\"\\n\");\r\n  return csvFileHeader.trim().toLowerCase() === lines[0].trim().toLowerCase();\r\n}","import React, { Component } from 'react';\r\nimport { isValidJson } from '../utils/isValidJson';\r\nimport { csvContentHeaderIsCorrect } from '../Constants/csvFileHeader';\r\n\r\nclass Controls extends Component {\r\n\r\n  onJsonFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      var content = e.target.result;\r\n      if (!isValidJson(content)) {\r\n        alert('that\\'s not valid json, is it mate');\r\n        return;\r\n      }\r\n      this.props.onImportJson(JSON.parse(content));\r\n    };\r\n  }\r\n\r\n  onCsvFileImportChange = e => {\r\n    const reader = new FileReader();\r\n    reader.readAsText(e.target.files[0]);\r\n    reader.onload = e => {\r\n      const content = e.target.result;\r\n      if (!csvContentHeaderIsCorrect(content)) {\r\n        alert('I don\\'t like the header of that file\\'s content');\r\n        return;\r\n      }\r\n      const newState = { rows: [] };\r\n      const lines = content.split(\"\\n\");\r\n      for (let i = 1; i < lines.length; i++) {\r\n        let cols = lines[i].split(\",\");\r\n        let obj = {};\r\n        if(cols[0].length === 0){\r\n          break;\r\n        }\r\n        obj.id = cols[0];\r\n        obj.case = cols[1];\r\n        obj.expectedResult = cols[2];\r\n        obj.actualResult = cols[3];\r\n        obj.iPhoneTested = cols[4].toLowerCase() === \"true\";\r\n        obj.zebraTested = cols[5].toLowerCase() === \"true\";\r\n        obj.iPadTested = cols[6].toLowerCase() === \"true\";\r\n        obj.desktopTested = cols[7].toLowerCase() === \"true\";\r\n        obj.status = cols[8].toLowerCase();\r\n        newState.rows.push(obj);\r\n      }\r\n      this.props.onImportJson(newState);\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          style={{ float: \"right\" }}\r\n          className=\"button-danger pure-button\"\r\n          onClick={this.props.onResetData}\r\n        >\r\n          Reset data\r\n        </button>\r\n        <div className=\"u-margin-bottom\">\r\n          <button\r\n            className=\"button-warning pure-button\"\r\n            onClick={() => document.getElementById(\"jsonFileInput\").click()}\r\n          >\r\n            Import json\r\n          </button>\r\n          <button\r\n            className=\"button-warning pure-button u-margin-left\"\r\n            onClick={() => document.getElementById(\"csvFileInput\").click()}\r\n          >\r\n            Import CSV\r\n          </button>\r\n          <button\r\n            className=\"button-secondary pure-button u-margin-left\"\r\n            onClick={this.props.onExportJson}\r\n          >\r\n            Export json\r\n          </button>\r\n          <button\r\n            className=\"button-secondary pure-button u-margin-left\"\r\n            onClick={this.props.onExportTxt}\r\n          >\r\n            Export txt\r\n          </button>\r\n          <button\r\n            className=\"button-secondary pure-button u-margin-left\"\r\n            onClick={this.props.onExportCsv}\r\n          >\r\n            Export CSV\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            id=\"jsonFileInput\"\r\n            className=\"u-display-none\"\r\n            onChange={this.onJsonFileImportChange}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            id=\"csvFileInput\"\r\n            className=\"u-display-none\"\r\n            onChange={this.onCsvFileImportChange}\r\n          />\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nexport default Controls;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Table from \"./Components/Table\";\r\nimport Controls from \"./Components/Controls\";\r\nimport { NotTested } from \"./Constants/status\";\r\nimport StatusDot from \"./Components/StatusDot\";\r\nimport { csvFileHeader } from \"./Constants/csvFileHeader\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rows: []\r\n    };\r\n    if (typeof window !== \"undefined\") {\r\n      if (\r\n        window.localStorage[\"test-cases\"] &&\r\n        window.localStorage[\"test-cases\"].length > 0\r\n      ) {\r\n        this.state = JSON.parse(window.localStorage[\"test-cases\"]);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (e, index) => {\r\n    const newState = this.state;\r\n    if (e.target.type === \"checkbox\") {\r\n      newState.rows[index][e.target.name] = !newState.rows[index][\r\n        e.target.name\r\n      ];\r\n    } else {\r\n      newState.rows[index][e.target.name] = e.target.value;\r\n    }\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onDelete = id => {\r\n    const newState = this.state;\r\n    newState.rows = this.state.rows.filter((x, i) => i !== id);\r\n    this.setState(newState);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(newState);\r\n  };\r\n\r\n  onAddNewRow = () => {\r\n    const newState = this.state;\r\n    const id = newState.rows.length + 1;\r\n    newState.rows.push({\r\n      id,\r\n      case: \"\",\r\n      expectedResult: \"\",\r\n      actualResult: \"\",\r\n      iPhoneTested: false,\r\n      zebraTested: false,\r\n      iPadTested: false,\r\n      desktopTested: false,\r\n      status: NotTested\r\n    });\r\n    this.setState(newState);\r\n  };\r\n\r\n  exportData = (filename, content) => {\r\n    var el = document.createElement(\"a\");\r\n    el.setAttribute(\r\n      \"href\",\r\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content)\r\n    );\r\n    el.setAttribute(\"download\", filename);\r\n    el.style.display = \"none\";\r\n    document.body.appendChild(el);\r\n    el.click();\r\n    document.body.removeChild(el);\r\n  };\r\n  exportJson = () => {\r\n    this.exportData(\"test-cases.json\", JSON.stringify(this.state, null, \"\\t\"));\r\n  };\r\n  exportTxt = () => {\r\n    var txtFileContent = this.state.rows\r\n      .map(\r\n        x =>\r\n          `${x.case}\\r\\nExpected result: ${\r\n            x.expectedResult\r\n          }\\r\\nActual result: ${x.actualResult}\\r\\nStatus: ${x.status}\\r\\n-----`\r\n      )\r\n      .join(\"\\r\\n\");\r\n    this.exportData(\"test-cases.txt\", txtFileContent);\r\n  };\r\n  exportCsv = () => {\r\n    let csvFileContent = csvFileHeader;\r\n\r\n    this.state.rows.forEach(rowObj => {\r\n      let str = \"\";\r\n      for (var prop in rowObj) {\r\n        str += rowObj[prop] + \",\";\r\n      }\r\n      str += \"\\r\\n\";\r\n      csvFileContent += str;\r\n    });\r\n    this.exportData(\"test-cases.csv\", csvFileContent);\r\n  };\r\n\r\n  importJson = json => {\r\n    this.setState(json);\r\n    window.localStorage[\"test-cases\"] = JSON.stringify(json);\r\n  };\r\n\r\n  clearCache = () => {\r\n    window.localStorage[\"test-cases\"] = \"\";\r\n    this.setState({ rows: [] });\r\n  };\r\n\r\n  addButtonIsDisabled = () => {\r\n    const rows = this.state.rows;\r\n    if (rows.length > 0) {\r\n      if (rows[rows.length - 1].case.length === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <div className=\"headline u-margin-bottom\">\r\n          <h1>Test cases</h1>\r\n          <span className=\"u-margin-left-xl\">\r\n            {this.state.rows.map(x => (\r\n              <StatusDot\r\n                key={x.id}\r\n                status={x.status}\r\n                toolTipText={x.case}\r\n                animatedClassName=\"fadeInLeft faster\"\r\n              />\r\n            ))}\r\n          </span>\r\n        </div>\r\n        <Controls\r\n          onAddNewRow={this.onAddNewRow}\r\n          onExportJson={this.exportJson}\r\n          onExportTxt={this.exportTxt}\r\n          onResetData={this.clearCache}\r\n          onExportCsv={this.exportCsv}\r\n          onImportJson={this.importJson}\r\n        />\r\n        <Table\r\n          rows={this.state.rows}\r\n          onChange={this.onChange}\r\n          onDelete={this.onDelete}\r\n        />\r\n        <button\r\n          className=\"button-success pure-button important-active-green\"\r\n          disabled={this.addButtonIsDisabled()}\r\n          onClick={this.onAddNewRow}\r\n        >\r\n          Add test case\r\n        </button>\r\n        <div className=\"u-margin-top-massive\">\r\n          <h3>todo</h3>\r\n          <ul>\r\n            <li>move status tool tips to bottom</li>\r\n            <li>only focus test case text area if length === 0</li>\r\n            <li>figure out way of support bug tracking for each test case and device</li>\r\n            <li>import/ export excel files</li>\r\n            <li>support mobile device width</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'purecss';\r\nimport 'animate.css';\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}